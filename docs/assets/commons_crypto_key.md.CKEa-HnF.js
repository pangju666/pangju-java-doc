import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.XA8aHGu3.js";const y=JSON.parse('{"title":"密钥","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"commons/crypto/key.md","filePath":"commons/crypto/key.md","lastUpdated":null}'),n={name:"commons/crypto/key.md"};function l(h,s,k,p,r,E){return t(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="密钥" tabindex="-1">密钥 <a class="header-anchor" href="#密钥" aria-label="Permalink to &quot;密钥&quot;">​</a></h1><h2 id="rsa密钥" tabindex="-1">RSA密钥 <a class="header-anchor" href="#rsa密钥" aria-label="Permalink to &quot;RSA密钥&quot;">​</a></h2><p><code>io.github.pangju666.commons.crypto.key.RSAKey</code></p><p>我在该模块定义了一个用于封装RSA公私钥和一些常用功能的数据结构类</p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>getPublicKey</td><td style="text-align:left;">PublicKey</td><td style="text-align:center;">获取公钥</td></tr><tr><td>getPrivateKey</td><td style="text-align:left;">PrivateKey</td><td style="text-align:center;">获取私钥</td></tr><tr><td>random</td><td style="text-align:left;">RSAKey</td><td style="text-align:center;">生成随机RSA密钥对</td></tr><tr><td>fromKeyPair</td><td style="text-align:left;">RSAKey</td><td style="text-align:center;">从现有KeyPair构建RSAKey实例</td></tr><tr><td>fromRawBytes</td><td style="text-align:left;">RSAKey</td><td style="text-align:center;">从公私钥构建RSAKey</td></tr><tr><td>fromBase64String</td><td style="text-align:left;">RSAKey</td><td style="text-align:center;">从Base64编码公私钥构建RSAKey</td></tr></tbody></table><h3 id="获取公钥" tabindex="-1">获取公钥 <a class="header-anchor" href="#获取公钥" aria-label="Permalink to &quot;获取公钥&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rsaKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPublicKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//获取公钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rsaKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrivateKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取私钥</span></span></code></pre></div><h3 id="生成随机密钥对" tabindex="-1">生成随机密钥对 <a class="header-anchor" href="#生成随机密钥对" aria-label="Permalink to &quot;生成随机密钥对&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成默认长度(2048位)的随机RSA密钥对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成指定长度的随机RSA密钥对，支持1024/2048/4096位三种标准密钥长度</span></span></code></pre></div><h3 id="从keypair构建" tabindex="-1">从KeyPair构建 <a class="header-anchor" href="#从keypair构建" aria-label="Permalink to &quot;从KeyPair构建&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPair keyPair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(keyPair);</span></span></code></pre></div><h3 id="从公私钥构建" tabindex="-1">从公私钥构建 <a class="header-anchor" href="#从公私钥构建" aria-label="Permalink to &quot;从公私钥构建&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPair keyPair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] publicBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyPair.public.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] privateBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyPair.private.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromRawBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(publicBytes, privateBytes);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 也可以只传入公私钥中的任意一个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromRawBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, privateBytes);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromRawBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(publicBytes, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果传入无效密钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;invalid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, privateBytes); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 抛出InvalidKeySpecException</span></span></code></pre></div><h3 id="从base64编码公私钥构建" tabindex="-1">从Base64编码公私钥构建 <a class="header-anchor" href="#从base64编码公私钥构建" aria-label="Permalink to &quot;从Base64编码公私钥构建&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPair keyPair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String base64Public </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base64.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(originalPair.public.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String base64Private </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base64.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(originalPair.private.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(base64Public, base64Private);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 也可以只传入公私钥中的任意一个</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, base64Private);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(base64Public, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 如果传入无效密钥</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RSAKey rsaKey4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RSAKey.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fromBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;invalid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, base64Private); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 抛出InvalidKeySpecException</span></span></code></pre></div><h2 id="工具类" tabindex="-1">工具类 <a class="header-anchor" href="#工具类" aria-label="Permalink to &quot;工具类&quot;">​</a></h2><p><code>io.github.pangju666.commons.crypto.utils.KeyPairUtils</code></p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>getKeyFactory</td><td style="text-align:left;">KeyFactory</td><td style="text-align:center;">获取指定算法的密钥工厂</td></tr><tr><td>generateKeyPair</td><td style="text-align:left;">KeyPair</td><td style="text-align:center;">生成指定算法的密钥对</td></tr><tr><td>getPrivateKeyFromPKCS8RawBytes</td><td style="text-align:left;">PrivateKey</td><td style="text-align:center;">从PKCS#8格式的原始字节数组中解析私钥</td></tr><tr><td>getPublicKeyFromX509RawBytes</td><td style="text-align:left;">PublicKey</td><td style="text-align:center;">从X.509格式的Base64编码字符串中解析公钥</td></tr><tr><td>getPrivateKeyFromPKCS8Base64String</td><td style="text-align:left;">PrivateKey</td><td style="text-align:center;">从PKCS#8格式的Base64编码字符串中解析私钥</td></tr><tr><td>getPublicKeyFromX509Base64String</td><td style="text-align:left;">PublicKey</td><td style="text-align:center;">从X.509格式的原始字节数组中解析公钥</td></tr></tbody></table><h3 id="获取密钥工厂" tabindex="-1">获取密钥工厂 <a class="header-anchor" href="#获取密钥工厂" aria-label="Permalink to &quot;获取密钥工厂&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyFactory keyFactory </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKeyFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM);</span></span></code></pre></div><h3 id="生成密钥对" tabindex="-1">生成密钥对 <a class="header-anchor" href="#生成密钥对" aria-label="Permalink to &quot;生成密钥对&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成RSA密钥对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成长度为2048的密钥对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 指定随机数生成器并生成长度为2048的密钥对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SecureRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div><h3 id="解析私钥" tabindex="-1">解析私钥 <a class="header-anchor" href="#解析私钥" aria-label="Permalink to &quot;解析私钥&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPair keyPair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] privateKeyBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyPair.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrivate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PrivateKey privateKey1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrivateKeyFromPKCS8RawBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RSA, privateKeyBytes);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String base64Key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base64.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(privateKeyBytes);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PrivateKey privateKey2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPrivateKeyFromPKCS8Base64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RSA, base64Key);</span></span></code></pre></div><h3 id="解析公钥" tabindex="-1">解析公钥 <a class="header-anchor" href="#解析公钥" aria-label="Permalink to &quot;解析公钥&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">KeyPair keyPair </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generateKeyPair</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(CryptoConstants.RSA_ALGORITHM);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] publicKeyBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> keyPair.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPublic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEncoded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PublicKey publicKey1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPublicKeyFromX509RawBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RSA, publicKeyBytes);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String base64Key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Base64.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encodeBase64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(publicKeyBytes);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PublicKey publicKey2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyPairUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getPublicKeyFromX509Base64String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RSA, base64Key);</span></span></code></pre></div>`,26)])])}const g=i(n,[["render",l]]);export{y as __pageData,g as default};
