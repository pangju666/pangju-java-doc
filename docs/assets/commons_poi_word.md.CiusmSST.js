import{_ as i,c as a,o as t,ag as l}from"./chunks/framework.XA8aHGu3.js";const o=JSON.parse('{"title":"Word","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"commons/poi/word.md","filePath":"commons/poi/word.md","lastUpdated":1761555515000}'),e={name:"commons/poi/word.md"};function n(h,s,p,k,d,r){return t(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="word" tabindex="-1">Word <a class="header-anchor" href="#word" aria-label="Permalink to &quot;Word&quot;">​</a></h1><p>Word相关的工具类，我做的功能不多，只做了判断文件有效性和获取文档对象和<code>Poi-tl</code>简化封装</p><h2 id="doc" tabindex="-1">DOC <a class="header-anchor" href="#doc" aria-label="Permalink to &quot;DOC&quot;">​</a></h2><p><code>io.github.pangju666.commons.poi.utils.HWPFDocumentUtils</code></p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>isDoc</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查是否为DOC格式</td></tr><tr><td>getDocument</td><td style="text-align:left;">HWPFDocument</td><td style="text-align:center;">加载DOC文档</td></tr></tbody></table><h3 id="检查是否为doc格式" tabindex="-1">检查是否为DOC格式 <a class="header-anchor" href="#检查是否为doc格式" aria-label="Permalink to &quot;检查是否为DOC格式&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.doc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDoc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="加载doc文档" tabindex="-1">加载DOC文档 <a class="header-anchor" href="#加载doc文档" aria-label="Permalink to &quot;加载DOC文档&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.doc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// HWPFDocument </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// HWPFDocument</span></span></code></pre></div><h2 id="docx" tabindex="-1">DOCX <a class="header-anchor" href="#docx" aria-label="Permalink to &quot;DOCX&quot;">​</a></h2><p><code>io.github.pangju666.commons.poi.utils.XWPFDocumentUtils</code></p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>isDocx</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查是否为DOCX格式</td></tr><tr><td>getDocument</td><td style="text-align:left;">XWPFDocument</td><td style="text-align:center;">加载DOCX文档</td></tr></tbody></table><h3 id="检查是否为docx格式" tabindex="-1">检查是否为DOCX格式 <a class="header-anchor" href="#检查是否为docx格式" aria-label="Permalink to &quot;检查是否为DOCX格式&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDocx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDocx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDocx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="加载docx文档" tabindex="-1">加载DOCX文档 <a class="header-anchor" href="#加载docx文档" aria-label="Permalink to &quot;加载DOCX文档&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFDocument </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFDocumentUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getDocument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFDocument</span></span></code></pre></div><h2 id="docx模板" tabindex="-1">DOCX模板 <a class="header-anchor" href="#docx模板" aria-label="Permalink to &quot;DOCX模板&quot;">​</a></h2><p><code>io.github.pangju666.commons.poi.utils.XWPFTemplateUtils</code></p><p>基于<a href="https://deepoove.com/poi-tl/#_getting_started" target="_blank" rel="noreferrer"><code>poi-tl</code></a>实现，这个模板引擎本身就封装的很好，不需要多余的方法封装，所以我只是做了几个我自己觉得实用的操作。</p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>compile</td><td style="text-align:left;">XWPFTemplate</td><td style="text-align:center;">编译模板</td></tr><tr><td>getTagNames</td><td style="text-align:left;">List&lt;String&gt;</td><td style="text-align:center;">获取模板中的所有标签名称</td></tr><tr><td>buildDataModel</td><td style="text-align:left;">Map&lt;String, RenderData&gt;</td><td style="text-align:center;">构建模板数据模型</td></tr></tbody></table><h3 id="编译模板" tabindex="-1">编译模板 <a class="header-anchor" href="#编译模板" aria-label="Permalink to &quot;编译模板&quot;">​</a></h3><p><code>Configure</code>里面主要配置一些插件和一些模板引擎的配置，一般来说用默认的就行了。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;template.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, Configure.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">readFileToByteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file), Configure.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span></code></pre></div><h3 id="获取模板中的所有标签名称" tabindex="-1">获取模板中的所有标签名称 <a class="header-anchor" href="#获取模板中的所有标签名称" aria-label="Permalink to &quot;获取模板中的所有标签名称&quot;">​</a></h3><p>用来构建模板数据模型的时候，可能用的上。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;template.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplate template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTagNames</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// List&lt;String&gt;</span></span></code></pre></div><h3 id="构建模板数据模型" tabindex="-1">构建模板数据模型 <a class="header-anchor" href="#构建模板数据模型" aria-label="Permalink to &quot;构建模板数据模型&quot;">​</a></h3><p>将渲染数据列表与模板标签名称按顺序映射，构建可用于模板渲染的数据模型。 如果渲染数据数量少于标签数量，多余的标签将不会被映射。</p><p>我这个只是简化了构建的操作，如果想要灵活度的话，还是自己构建比较好。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;template.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">XWPFTemplate template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// XWPFTemplate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File outputFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output.docx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RenderData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; datas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ArrayList&lt;&gt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">datas.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Texts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Sayi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RenderData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; dataModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XWPFTemplateUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">buildDataModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(template, datas);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dataModel);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">writeAndClose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFile));</span></span></code></pre></div>`,30)])])}const g=i(e,[["render",n]]);export{o as __pageData,g as default};
