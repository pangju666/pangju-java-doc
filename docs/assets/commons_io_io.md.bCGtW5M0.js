import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.XA8aHGu3.js";const y=JSON.parse('{"title":"IO","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"commons/io/io.md","filePath":"commons/io/io.md","lastUpdated":1761555515000}'),e={name:"commons/io/io.md"};function l(p,s,h,k,r,d){return t(),a("div",null,[...s[0]||(s[0]=[n(`<h1 id="io" tabindex="-1">IO <a class="header-anchor" href="#io" aria-label="Permalink to &quot;IO&quot;">​</a></h1><h2 id="工具类" tabindex="-1">工具类 <a class="header-anchor" href="#工具类" aria-label="Permalink to &quot;工具类&quot;">​</a></h2><p><code>io.github.pangju666.commons.io.utils.IOUtils</code></p><p>在继承<code>org.apache.commons.io.IOUtils</code>的基础上，我添加一些自己总结的通用方法</p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>getBufferSize</td><td style="text-align:left;">int</td><td style="text-align:center;">根据总大小获取推荐的缓冲区大小</td></tr><tr><td>unsynchronizedBuffer</td><td style="text-align:left;">InputStream</td><td style="text-align:center;">创建非同步缓冲输入流</td></tr><tr><td>toUnsynchronizedByteArrayInputStream</td><td style="text-align:left;">InputStream</td><td style="text-align:center;">创建非同步字节数组输入流</td></tr><tr><td>toUnsynchronizedByteArrayOutputStream</td><td style="text-align:left;">OutputStream</td><td style="text-align:center;">创建非同步字节数组输出流</td></tr><tr><td>encrypt</td><td style="text-align:left;">void</td><td style="text-align:center;">AES/CBC/PKCS5Padding模式流加密</td></tr><tr><td>decrypt</td><td style="text-align:left;">void</td><td style="text-align:center;">AES/CBC/PKCS5Padding模式流解密</td></tr><tr><td>encryptByCtr</td><td style="text-align:left;">void</td><td style="text-align:center;">使用AES/CTR模式加密</td></tr><tr><td>decryptByCtr</td><td style="text-align:left;">void</td><td style="text-align:center;">使用AES/CTR模式解密</td></tr></tbody></table><h3 id="计算缓冲区" tabindex="-1">计算缓冲区 <a class="header-anchor" href="#计算缓冲区" aria-label="Permalink to &quot;计算缓冲区&quot;">​</a></h3><p>适用于需要缓冲区类型的输入流或输出流</p><p>缓冲区大小策略如下：</p><ul><li>小于256KB：4KB</li><li>256KB~1MB：8KB</li><li>1MB~10MB：32KB</li><li>10MB~100MB：64KB</li><li>100MB~1GB：128KB</li><li>&gt;=1GB：256KB</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span></code></pre></div><h3 id="打开输入流" tabindex="-1">打开输入流 <a class="header-anchor" href="#打开输入流" aria-label="Permalink to &quot;打开输入流&quot;">​</a></h3><h4 id="创建非同步缓冲输入流" tabindex="-1">创建非同步缓冲输入流 <a class="header-anchor" href="#创建非同步缓冲输入流" aria-label="Permalink to &quot;创建非同步缓冲输入流&quot;">​</a></h4><p>不考虑线程安全的话，推荐用这个缓冲区输入流</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 自动计算缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedBufferedInputStream inputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsynchronizedBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 自定义缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedBufferedInputStream inputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unsynchronizedBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="创建非同步字节数组输入流" tabindex="-1">创建非同步字节数组输入流 <a class="header-anchor" href="#创建非同步字节数组输入流" aria-label="Permalink to &quot;创建非同步字节数组输入流&quot;">​</a></h4><p>不考虑线程安全的话，推荐用这个数组输入流</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 自动计算缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedBufferedInputStream inputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUnsynchronizedByteArrayInputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]);</span></span></code></pre></div><h4 id="创建非同步字节数组输出流" tabindex="-1">创建非同步字节数组输出流 <a class="header-anchor" href="#创建非同步字节数组输出流" aria-label="Permalink to &quot;创建非同步字节数组输出流&quot;">​</a></h4><p>不考虑线程安全的话，推荐用这个组输出流</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 自定义缓冲区大小</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedByteArrayOutputStream outputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUnsynchronizedByteArrayOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 使用输入流初始化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedByteArrayOutputStream outputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUnsynchronizedByteArrayOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\\\ 自定义缓冲区大小并使用输入流初始化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UnsynchronizedByteArrayOutputStream outputStream </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toUnsynchronizedByteArrayOutputStream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="流加解密" tabindex="-1">流加解密 <a class="header-anchor" href="#流加解密" aria-label="Permalink to &quot;流加解密&quot;">​</a></h3><p>流长度不确定或比较大的话推荐使用<code>encryptByCtr</code>加密，<code>decryptByCtr</code>解密</p><h4 id="aes-cbc-pkcs5padding模式加密" tabindex="-1">AES/CBC/PKCS5Padding模式加密 <a class="header-anchor" href="#aes-cbc-pkcs5padding模式加密" aria-label="Permalink to &quot;AES/CBC/PKCS5Padding模式加密&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] IV_16 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密流，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密流，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password, IV_16);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解密流，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密流，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password, IV_16);</span></span></code></pre></div><h4 id="aes-ctr模式加密" tabindex="-1">AES/CTR模式加密 <a class="header-anchor" href="#aes-ctr模式加密" aria-label="Permalink to &quot;AES/CTR模式加密&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] IV_16 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密流，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密流，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password, IV_16);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式解密流，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密流，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">IOUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputStream, outputStream, password, IV_16);</span></span></code></pre></div>`,26)])])}const o=i(e,[["render",l]]);export{y as __pageData,o as default};
