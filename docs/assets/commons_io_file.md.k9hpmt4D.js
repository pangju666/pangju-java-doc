import{_ as i,c as t,o as a,ag as l}from"./chunks/framework.XA8aHGu3.js";const g=JSON.parse('{"title":"文件","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"commons/io/file.md","filePath":"commons/io/file.md","lastUpdated":1761555515000}'),e={name:"commons/io/file.md"};function n(h,s,p,k,d,E){return a(),t("div",null,[...s[0]||(s[0]=[l(`<h1 id="文件" tabindex="-1">文件 <a class="header-anchor" href="#文件" aria-label="Permalink to &quot;文件&quot;">​</a></h1><h2 id="文件类型" tabindex="-1">文件类型 <a class="header-anchor" href="#文件类型" aria-label="Permalink to &quot;文件类型&quot;">​</a></h2><p><code>io.github.pangju666.commons.io.enums.FileType</code></p><table tabindex="0"><thead><tr><th>枚举值</th><th style="text-align:left;">说明</th><th style="text-align:left;">类型集合</th><th style="text-align:left;">类型前缀</th></tr></thead><tbody><tr><td>IMAGE</td><td style="text-align:left;">图片</td><td style="text-align:left;"></td><td style="text-align:left;">image/</td></tr><tr><td>TEXT</td><td style="text-align:left;">文本</td><td style="text-align:left;"></td><td style="text-align:left;">text/</td></tr><tr><td>AUDIO</td><td style="text-align:left;">音频</td><td style="text-align:left;"></td><td style="text-align:left;">audio/</td></tr><tr><td>MODEL</td><td style="text-align:left;">模型</td><td style="text-align:left;"></td><td style="text-align:left;">model/</td></tr><tr><td>VIDEO</td><td style="text-align:left;">视频</td><td style="text-align:left;">Collections.singleton(&quot;application/vnd.apple.mpegurl&quot;)</td><td style="text-align:left;">video/</td></tr><tr><td>COMPRESS</td><td style="text-align:left;">压缩包</td><td style="text-align:left;">Set.of(&quot;application/x-tar&quot;, &quot;application/x-gzip&quot;, &quot;application/x-bzip&quot;, &quot;application/x-bzip2&quot;,&quot;application/zip&quot;, &quot;application/x-uc2-compressed&quot;, &quot;application/x-rar-compressed&quot;,&quot;application/x-ace-compressed&quot;, &quot;application/x-7z-compressed&quot;, &quot;application/vnd.ms-cab-compressed&quot;)</td><td style="text-align:left;"></td></tr><tr><td>DOCUMENT</td><td style="text-align:left;">文档</td><td style="text-align:left;">Set.of(&quot;application/pdf&quot;, &quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&quot;, &quot;application/vnd.ms-excel&quot;, &quot;application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot;, &quot;application/msword&quot;, &quot;application/vnd.openxmlformats-officedocument.presentationml.presentation&quot;, &quot;application/vnd.ms-powerpoint&quot;)</td><td style="text-align:left;"></td></tr></tbody></table><h2 id="文件名" tabindex="-1">文件名 <a class="header-anchor" href="#文件名" aria-label="Permalink to &quot;文件名&quot;">​</a></h2><p><code>io.github.pangju666.commons.io.utils.FilenameUtils</code></p><p>在继承<code>org.apache.commons.io.FilenameUtils</code>的基础上，我添加一些自己总结的通用方法</p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>getMimeType</td><td style="text-align:left;">String</td><td style="text-align:center;">获取文件MIME类型</td></tr><tr><td>isImageType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为图片类型</td></tr><tr><td>isTextType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为文本类型</td></tr><tr><td>isModelType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为模型类型</td></tr><tr><td>isVideoType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为视频类型</td></tr><tr><td>isAudioType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为音频类型</td></tr><tr><td>isMimeType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为指定类型</td></tr><tr><td>isAnyMimeType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断是否为任一类型</td></tr><tr><td>rename</td><td style="text-align:left;">String</td><td style="text-align:center;">完全替换文件名（包含名称和扩展名）</td></tr><tr><td>replaceBaseName</td><td style="text-align:left;">String</td><td style="text-align:center;">替换文件基名（保留扩展名和路径）</td></tr><tr><td>replaceExtension</td><td style="text-align:left;">String</td><td style="text-align:center;">替换文件扩展名</td></tr><tr><td>isDirectoryPath</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断路径是否为目录路径</td></tr><tr><td>isFilePath</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断路径是否为文件路径</td></tr></tbody></table><h3 id="获取文件类型" tabindex="-1">获取文件类型 <a class="header-anchor" href="#获取文件类型" aria-label="Permalink to &quot;获取文件类型&quot;">​</a></h3><p>根据文件拓展名来获取文件类型，准确性高不高</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String mimeType1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// image/png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String mimeType2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">String mimeType2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无法识别的类型会返回 application/octet-stream</span></span></code></pre></div><h3 id="判断文件类型" tabindex="-1">判断文件类型 <a class="header-anchor" href="#判断文件类型" aria-label="Permalink to &quot;判断文件类型&quot;">​</a></h3><p>根据文件拓展名来判断文件类型，准确性高不高</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isImageType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isTextType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isModelType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.obj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isVideoType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAudioType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.mp3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否为任一类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAnyMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAnyMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Set.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="修改文件名" tabindex="-1">修改文件名 <a class="header-anchor" href="#修改文件名" aria-label="Permalink to &quot;修改文件名&quot;">​</a></h3><p>只是从文件名层次重命名，不会涉及IO操作</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重命名文件名，保留父路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.png</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换文件名，保留父路径和拓展名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBaseName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.png.pdf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBaseName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.pdf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换拓展名，保留父路径和文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/report.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/report.test.png</span></span></code></pre></div><h3 id="判断路径" tabindex="-1">判断路径 <a class="header-anchor" href="#判断路径" aria-label="Permalink to &quot;判断路径&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否为目录路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDirectoryPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/logs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDirectoryPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isDirectoryPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否为文件路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/logs/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/logs&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FilenameUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h2 id="文件-1" tabindex="-1">文件 <a class="header-anchor" href="#文件-1" aria-label="Permalink to &quot;文件&quot;">​</a></h2><p><code>io.github.pangju666.commons.io.utils.FileUtils</code></p><p>在继承<code>org.apache.commons.io.FileUtils</code>的基础上，我添加一些自己总结的通用方法</p><table tabindex="0"><thead><tr><th>方法名</th><th style="text-align:left;">返回值</th><th style="text-align:center;">用途</th></tr></thead><tbody><tr><td>getBufferSize</td><td style="text-align:left;">int</td><td style="text-align:center;">根据文件大小计算最佳缓冲区大小</td></tr><tr><td>getSlidingBufferSize</td><td style="text-align:left;">int</td><td style="text-align:center;">根据文件大小计算滑动窗口缓冲区大小</td></tr><tr><td>openUnsynchronizedBufferedInputStream</td><td style="text-align:left;">InputStream</td><td style="text-align:center;">打开非同步缓冲输入流</td></tr><tr><td>openBufferedFileChannelInputStream</td><td style="text-align:left;">InputStream</td><td style="text-align:center;">打开缓冲文件通道输入流</td></tr><tr><td>openMemoryMappedFileInputStream</td><td style="text-align:left;">InputStream</td><td style="text-align:center;">打开内存映射文件输入流</td></tr><tr><td>encryptFile</td><td style="text-align:left;">void</td><td style="text-align:center;">使用AES/CBC/PKCS5Padding模式加密文件</td></tr><tr><td>decryptFile</td><td style="text-align:left;">void</td><td style="text-align:center;">使用AES/CBC/PKCS5Padding模式解密文件</td></tr><tr><td>encryptFileByCtr</td><td style="text-align:left;">void</td><td style="text-align:center;">使用AES/CTR模式加密文件</td></tr><tr><td>decryptFileByCtr</td><td style="text-align:left;">void</td><td style="text-align:center;">AES/CTR模式文件解密</td></tr><tr><td>forceDeleteIfExist</td><td style="text-align:left;">void</td><td style="text-align:center;">强制删除文件或目录（如果存在）</td></tr><tr><td>deleteIfExist</td><td style="text-align:left;">void</td><td style="text-align:center;">条件删除文件（如果存在）</td></tr><tr><td>exist</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查文件或目录是否存在</td></tr><tr><td>notExist</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查文件或目录是否不存在</td></tr><tr><td>existFile</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查常规文件是否存在</td></tr><tr><td>notExistFile</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检查常规文件是否不存在</td></tr><tr><td>parseMetaData</td><td style="text-align:left;">Map&lt;String, String&gt;</td><td style="text-align:center;">解析文件内容元数据</td></tr><tr><td>getMimeType</td><td style="text-align:left;">String</td><td style="text-align:center;">获取文件真实MIME类型</td></tr><tr><td>isImageType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检测是否为图片文件</td></tr><tr><td>isTextType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检测是否为文本文件</td></tr><tr><td>isModelType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检测是否为模型文件</td></tr><tr><td>isVideoType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检测是否为视频文件</td></tr><tr><td>isAudioType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">检测是否为音频文件</td></tr><tr><td>isMimeType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断文件是否为指定类型</td></tr><tr><td>isAnyMimeType</td><td style="text-align:left;">boolean</td><td style="text-align:center;">判断文件是否为任一类型</td></tr><tr><td>rename</td><td style="text-align:left;">File</td><td style="text-align:center;">安全重命名文件或目录</td></tr><tr><td>replaceBaseName</td><td style="text-align:left;">File</td><td style="text-align:center;">替换文件基名（保留扩展名）</td></tr><tr><td>replaceExtension</td><td style="text-align:left;">File</td><td style="text-align:center;">替换文件扩展名</td></tr><tr><td>check</td><td style="text-align:left;">boolean</td><td style="text-align:center;">基础文件校验（存在性检查）</td></tr><tr><td>checkFile</td><td style="text-align:left;">boolean</td><td style="text-align:center;">常规文件校验（类型检查）</td></tr><tr><td>checkFileIfExist</td><td style="text-align:left;">boolean</td><td style="text-align:center;">条件文件校验（存在时才验证类型）</td></tr></tbody></table><h3 id="计算缓冲区" tabindex="-1">计算缓冲区 <a class="header-anchor" href="#计算缓冲区" aria-label="Permalink to &quot;计算缓冲区&quot;">​</a></h3><p>适用于需要缓冲区类型的输入流或输出流</p><p>缓冲区大小策略如下：</p><ul><li>小于256KB：4KB</li><li>256KB~1MB：8KB</li><li>1MB~10MB：32KB</li><li>10MB~100MB：64KB</li><li>100MB~1GB：128KB</li><li>&gt;=1GB：256KB</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span></code></pre></div><h3 id="计算滑动窗口缓冲区" tabindex="-1">计算滑动窗口缓冲区 <a class="header-anchor" href="#计算滑动窗口缓冲区" aria-label="Permalink to &quot;计算滑动窗口缓冲区&quot;">​</a></h3><p>需要配合<code>openMemoryMappedFileInputStream(File)</code>方法使用</p><p>分块策略：</p><ul><li>小文件(100MB以下)：4MB</li><li>中等文件(100MB~1GB)：16MB</li><li>大文件(1GB~10GB)：32MB</li><li>超大文件(10GB以上)：64MB</li></ul><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSlidingBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span></code></pre></div><h3 id="打开文件输入流" tabindex="-1">打开文件输入流 <a class="header-anchor" href="#打开文件输入流" aria-label="Permalink to &quot;打开文件输入流&quot;">​</a></h3><p>使用建议：</p><ol><li>首先考虑是否在意线程安全，不在意则使用<code>openUnsynchronizedBufferedInputStream(File)</code></li><li>其次考虑是否为超大文件，不是则使用<code>openInputStream(File)</code></li><li>其次考虑是否在意内存占用，不在意则使用<code>openMemoryMappedFileInputStream(File)</code></li><li>不满足以上条件的话，使用<code>openBufferedFileChannelInputStream(File)</code></li></ol><h3 id="文件加解密" tabindex="-1">文件加解密 <a class="header-anchor" href="#文件加解密" aria-label="Permalink to &quot;文件加解密&quot;">​</a></h3><p>大文件推荐使用<code>encryptFileByCtr</code>加密，<code>decryptFileByCtr</code>解密</p><h4 id="aes-cbc-pkcs5padding模式加密" tabindex="-1">AES/CBC/PKCS5Padding模式加密 <a class="header-anchor" href="#aes-cbc-pkcs5padding模式加密" aria-label="Permalink to &quot;AES/CBC/PKCS5Padding模式加密&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File inputFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File outputFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] IV_16 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密文件，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFile, outputFile, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密文件，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFile, outputFile, password, IV_16);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解密文件，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFile, inputFile, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 加密文件，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFile, inputFile, password, IV_16);</span></span></code></pre></div><h4 id="aes-ctr模式加密" tabindex="-1">AES/CTR模式加密 <a class="header-anchor" href="#aes-ctr模式加密" aria-label="Permalink to &quot;AES/CTR模式加密&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File inputFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">File outputFile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;output.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] IV_16 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1234567890123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密文件，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFile, outputFile, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密文件，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(inputFile, outputFile, password, IV_16);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式解密文件，密码只能为16字节，iv同密码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFile, inputFile, password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CTR模式加密文件，密码必须为16/24/32字节，iv只能为16字节</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptFileByCtr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(outputFile, inputFile, password, IV_16);</span></span></code></pre></div><h3 id="文件删除" tabindex="-1">文件删除 <a class="header-anchor" href="#文件删除" aria-label="Permalink to &quot;文件删除&quot;">​</a></h3><h4 id="强制删除" tabindex="-1">强制删除 <a class="header-anchor" href="#强制删除" aria-label="Permalink to &quot;强制删除&quot;">​</a></h4><p>在<code>forceDelete</code>的基础上，增加了文件是否存在判断</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forceDeleteIfExist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件不存在时，则不执行删除操作</span></span></code></pre></div><h4 id="正常删除" tabindex="-1">正常删除 <a class="header-anchor" href="#正常删除" aria-label="Permalink to &quot;正常删除&quot;">​</a></h4><p>在<code>delete</code>的基础上，增加了文件是否存在判断</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deleteIfExist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件不存在时，则不执行删除操作</span></span></code></pre></div><h3 id="判断文件是否存在" tabindex="-1">判断文件是否存在 <a class="header-anchor" href="#判断文件是否存在" aria-label="Permalink to &quot;判断文件是否存在&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件或目录存在则返回true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notExist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notExist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//  文件或目录不存在则返回true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">existFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">existFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件存在则返回true，如果是目录则返回false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notExistFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notExistFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 文件不存在则返回true，如果是目录则返回true</span></span></code></pre></div><h3 id="解析元数据" tabindex="-1">解析元数据 <a class="header-anchor" href="#解析元数据" aria-label="Permalink to &quot;解析元数据&quot;">​</a></h3><p>底层基于<code>tika</code>实现，支持格式示例：</p><table tabindex="0"><thead><tr><th>类型</th><th style="text-align:left;">示例格式</th><th style="text-align:center;">可提取元数据</th></tr></thead><tbody><tr><td>文档类</td><td style="text-align:left;">PDF/DOCX/XLSX/PPTX</td><td style="text-align:center;">作者、页数、创建时间、修改时间</td></tr><tr><td>多媒体</td><td style="text-align:left;">MP3/MP4/JPEG/PNG</td><td style="text-align:center;">专辑、时长、分辨率、拍摄参数</td></tr><tr><td>压缩文件</td><td style="text-align:left;">ZIP/RAR/7Z</td><td style="text-align:center;">条目数、压缩方法、注释</td></tr><tr><td>其他</td><td style="text-align:left;">HTML/XML/JSON</td><td style="text-align:center;">编码、字符集、DOCTYPE</td></tr></tbody></table><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; metaData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseMetaData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file);</span></span></code></pre></div><h3 id="获取文件类型-1" tabindex="-1">获取文件类型 <a class="header-anchor" href="#获取文件类型-1" aria-label="Permalink to &quot;获取文件类型&quot;">​</a></h3><p>根据文件内容来判断文件类型，底层基于<code>tika</code>实现，如果不在意IO操作的话，推荐使用这个方法获取文件类型</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// image/png</span></span></code></pre></div><h3 id="判断文件类型-1" tabindex="-1">判断文件类型 <a class="header-anchor" href="#判断文件类型-1" aria-label="Permalink to &quot;判断文件类型&quot;">​</a></h3><p>根据文件内容来判断文件类型，底层基于<code>tika</code>实现，如果不在意IO操作的话，推荐使用这个方法判断文件类型</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isImageType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isTextType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isModelType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.obj&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isVideoType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAudioType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.mp3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 判断是否为任一类型</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAnyMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAnyMimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Set.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;image/png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span></code></pre></div><h3 id="修改文件名-1" tabindex="-1">修改文件名 <a class="header-anchor" href="#修改文件名-1" aria-label="Permalink to &quot;修改文件名&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重命名文件名，保留父路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.png</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换文件名，保留父路径和拓展名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBaseName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.png.pdf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceBaseName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/test.pdf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 替换拓展名，保留父路径和文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/report.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replaceExtension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// C:/docs/report.test.png</span></span></code></pre></div><h3 id="检查文件有效性" tabindex="-1">检查文件有效性 <a class="header-anchor" href="#检查文件有效性" aria-label="Permalink to &quot;检查文件有效性&quot;">​</a></h3><p>主要是写库校验参数用的，业务开发里面应该是用不上的</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参数为 null则抛出 new NullPointerException(&quot;参数不可为 null&quot;)，文件或目录不存在则抛出 FileNotFoundException</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;参数不可为 null&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参数为 null则抛出 new NullPointerException(&quot;参数不可为 null&quot;)，文件不存在则抛出 FileNotFoundException，如果是目录则抛出 IllegalArgumentException</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;参数不可为 null&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 参数为 null则抛出 new NullPointerException(&quot;参数不可为 null&quot;)，文件存在且为目录则抛出 IllegalArgumentException</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FileUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkFileIfExist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> File</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/docs/report.pdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>`,66)])])}const o=i(e,[["render",n]]);export{g as __pageData,o as default};
